{"category": "RNASeq", "command": "kallisto quant", "description": "Alignment and quantification of reads from fastq files", "docker_image_name": "biodepot/kallisto", "docker_image_tag": "latest", "icon": "/biodepot/orangebiodepot/icons/kallisto-analysis.svg", "inputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["indexFile", {"callback": null, "type": {"py/type": "__builtin__.str"}}]}, {"py/tuple": ["fastqFiles", {"callback": null, "type": {"py/type": "__builtin__.str"}}]}]}]}, "name": "Kallisto Quant", "outputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputDir", {"type": {"py/type": "__builtin__.str"}}]}]}]}, "parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputDir", {"flags": ["-o", "--output-dir="], "label": "Output directory", "type": "directory"}]}, {"py/tuple": ["indexFile", {"flags": ["-i", "--index="], "label": "Index file", "type": "file"}]}, {"py/tuple": ["fastqFiles", {"filePattern": ["*.fastq.*"], "flags": [], "label": "fastq files", "type": "files"}]}, {"py/tuple": ["bias", {"flags": ["--bias"], "label": "Perform sequence based bias correction", "type": "binary"}]}, {"py/tuple": ["bootstrap", {"default": 1, "flags": ["-b", "--bootstrap-samples="], "label": "Number of bootstrap samples", "type": "int"}]}, {"py/tuple": ["seed", {"default": 42, "flags": ["--seed="], "gui": "Ledit", "label": "Seed for bootstrap sampling", "type": "int"}]}, {"py/tuple": ["plaintext", {"default": false, "flags": ["--plaintext"], "label": "Output plaintext instead of HDF5", "type": "bool"}]}, {"py/tuple": ["fusion", {"default": false, "flags": ["--fusion"], "label": "Search for fusion genes", "type": "bool"}]}, {"py/tuple": ["single", {"default": false, "flags": ["--single"], "label": "Quantify single-end reads", "type": "bool"}]}, {"py/tuple": ["single_overhang", {"default": false, "flags": ["--single-overhang"], "label": "Include reads that go beyond transcript start", "type": "bool"}]}, {"py/tuple": ["fr_stranded", {"default": false, "flags": ["--fr-stranded"], "label": "strand specific read - first read forward", "type": "bool"}]}, {"py/tuple": ["rf_stranded", {"default": false, "flags": ["--rf-stranded"], "label": "strand specific read - first read reverse", "type": "bool"}]}, {"py/tuple": ["fragment_length", {"default": null, "flags": ["-l", "--fragment-length"], "label": "Estimated fragment length", "type": "double"}]}, {"py/tuple": ["stdev", {"default": null, "flags": ["-s", "--sd"], "label": "Standard deviation of fragment length", "type": "double"}]}, {"py/tuple": ["nThreads", {"default": 1, "flags": ["-t", "--threads="], "label": "Number of threads", "type": "int"}]}, {"py/tuple": ["pseudoBam", {"default": false, "flags": ["--pseudobam"], "label": "Save alignments to BAM file", "type": "bool"}]}, {"py/tuple": ["genomeBam", {"default": false, "flags": ["--genomebam"], "label": "Project alignments to sorted BAM file", "type": "bool"}]}, {"py/tuple": ["gtf", {"flags": ["--gtf"], "label": "GTF file", "type": "file"}]}, {"py/tuple": ["chromosomes", {"flags": ["-c", "--chromosomes"], "label": "Chromosome file", "type": "file"}]}]}]}, "persistentSettings": "all", "priority": 10, "requiredParameters": ["outputDir", "indexFile", "fastqFiles"], "volumeMappings": [{"attr": "outputDir", "conVolume": "/root/output", "default": "/data/output"}, {"attr": "fastqFiles", "conVolume": "/root/fastq"}, {"attr": "indexFile", "conVolume": "/root/reference", "default": "/data/reference"}], "want_main_area": false}